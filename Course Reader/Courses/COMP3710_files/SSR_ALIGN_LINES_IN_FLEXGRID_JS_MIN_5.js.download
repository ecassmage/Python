function alignLinesInFlexGrid() {
 var grids = document.querySelectorAll(".ps_box-grid-flex.psc_gridlist-standard"); if (grids.length == 1) {
 var trs = grids[0].querySelectorAll(".ps_grid-row"); var trsLen = trs.length;  var idsToSearch = ["SSR_CLSRCH_F_WK_SSR_MTG_SCHED_L", "SSR_CLSRCH_F_WK_SSR_INSTR_LONG", "SSR_CLSRCH_F_WK_SSR_MTG_LOC_LONG"]; var idxLen = idsToSearch.length; for (var idx = 0; idx < idxLen; idx++) {
 var stackedCols = grids[0].querySelectorAll("div[id*=" + idsToSearch[idx] + "]");  var stackedColsLen = stackedCols.length; var newSpanIndex = trsLen;   for (var j = 0; j < stackedColsLen; j++) {
 var stackedCol = stackedCols[j];  if (stackedCol.id.search(/SSR_CLSRCH_F_WK_SSR_MTG_SCHED_L/i) > -1) {
 if (!stackedCol.classList.contains("psa_split")) { 
 var span = stackedCol.firstElementChild; if (span) {
 var daysTimes = span.textContent; var meetingPatterns = daysTimes.split(String.fromCharCode(10)); var oldSpan = stackedCol.removeChild(span);  for (var k = 0; k < meetingPatterns.length && meetingPatterns.length % 2 == 0; k = k + 2) {
 var meetingPattern = meetingPatterns.slice(k, k + 2); var newSpan = oldSpan.cloneNode(false); meetingPattern[1] = meetingPattern[1].trim();  newSpan.innerText = meetingPattern.join(String.fromCharCode(10)); newSpan.classList.add("psc_display-block"); newSpan.classList.add("psc_padding-bottom0_5em");  if (k > 0) {
 var newSpanIdParts = newSpan.id.split("$"); if (newSpanIdParts.length > 0) {
 var newSpanIndexString = newSpanIdParts[newSpanIdParts.length - 1];  newSpanIdParts[newSpanIdParts.length - 1] = newSpanIndex++; newSpan.id = newSpanIdParts.join("$"); }
 }

 stackedCol.appendChild(newSpan); stackedCol.classList.add("psa_split"); }
 }
 }
 }

 
 if (stackedCol.id.search(/SSR_CLSRCH_F_WK_SSR_INSTR_LONG/i) > -1) {
 if (!stackedCol.classList.contains("psa_split")) { 
 var span = stackedCol.firstElementChild; if (span) {
 var instructorNames = span.textContent; var instructorsPerPattern = instructorNames.split(String.fromCharCode(10, 10)); var oldSpan = stackedCol.removeChild(span); for (var k = 0; k < instructorsPerPattern.length; k++) {
 var newSpan = oldSpan.cloneNode(false); newSpan.innerText = instructorsPerPattern[k]; newSpan.classList.add("psc_display-block"); newSpan.classList.add("psc_padding-bottom0_5em");  if (k > 0) {
 var newSpanIdParts = newSpan.id.split("$"); if (newSpanIdParts.length > 0) {
 var newSpanIndexString = newSpanIdParts[newSpanIdParts.length - 1];  newSpanIdParts[newSpanIdParts.length - 1] = newSpanIndex++; newSpan.id = newSpanIdParts.join("$"); }
 }

 stackedCol.appendChild(newSpan); stackedCol.classList.add("psa_split"); }
 }
 }
 }

 
 if (stackedCol.id.search(/SSR_CLSRCH_F_WK_SSR_MTG_LOC_LONG/i) > -1) {
 if (!stackedCol.classList.contains("psa_split")) { 
 var span = stackedCol.firstElementChild; if (span) {
 var rooms = span.textContent; var roomPerPattern = rooms.split(String.fromCharCode(10)); var oldSpan = stackedCol.removeChild(span); for (var k = 0; k < roomPerPattern.length; k++) {
 var newSpan = oldSpan.cloneNode(false); newSpan.innerText = roomPerPattern[k]; newSpan.classList.add("psc_display-block"); newSpan.classList.add("psc_padding-bottom0_5em");  if (k > 0) {
 var newSpanIdParts = newSpan.id.split("$"); if (newSpanIdParts.length > 0) {
 var newSpanIndexString = newSpanIdParts[newSpanIdParts.length - 1];  newSpanIdParts[newSpanIdParts.length - 1] = newSpanIndex++; newSpan.id = newSpanIdParts.join("$"); }
 }

 stackedCol.appendChild(newSpan); stackedCol.classList.add("psa_split"); }
 }
 }
 } 
 } 
 } 

 for (var x = 0; x < trsLen; x++) {
 var heights = []; var maxHeights = []; var spanHeights = []; var maxSpanHeights = []; var singleColIndexes = []; var tds = trs[x].querySelectorAll(".ps_grid-cell"); var tdsLen = tds.length; for (var i = 0; i < tdsLen; i++) {
  var divGroupBox = tds[i].firstElementChild;  var stackedCols = divGroupBox.children; var stackedColsLen = stackedCols.length; var stackedColsNoSchedLinksLen = stackedColsLen - divGroupBox.querySelectorAll(".psa_sched-with-link").length; if (stackedColsNoSchedLinksLen >= 1) {
 var chevron = divGroupBox.querySelector(".psc_more"); if (stackedColsNoSchedLinksLen == 1 && chevron == null) { 
 if (stackedCols[0].childElementCount == 1) { 
 singleColIndexes.push(i); tds[i].classList.add("psc_valign-top");  }
 }

 if (heights.length == 0) {
 heights = new Array(stackedColsNoSchedLinksLen); }

 
 if (spanHeights.length == 0) {
 spanHeights = new Array(stackedColsNoSchedLinksLen); }

 var row = 0; for (var j = 0; j < stackedColsLen; j++) {
 var stackedCol = stackedCols[j];  if (stackedCol.id.search(/SSR_CLSRCH_F_WK_SSR_MTG_SCHED_L/i) > -1 || stackedCol.id.search(/SSR_CLSRCH_F_WK_SSR_INSTR_LONG/i) > -1 || stackedCol.id.search(/SSR_CLSRCH_F_WK_SSR_MTG_LOC_LONG/i) > -1) {
 if (stackedCol.classList.contains("psa_split")) { 
 var spansLen = stackedCol.childElementCount; for (var k = 0; k < spansLen; k++) {
 var span = stackedCol.children[k]; if (span) {
 if (!Array.isArray(spanHeights[row])) {
 spanHeights[row] = []; }

 if (!Array.isArray(spanHeights[row][k])) {
 spanHeights[row][k] = []; }

 span.style.height = "";  var spanRect = span.getBoundingClientRect(); var spanY = spanRect.height; var floatSpanHeight; if (span == stackedCol.lastElementChild && stackedCol.classList.contains("psa_sched-with-link")) {
 var spanRectLink = stackedCols[j + 1].getBoundingClientRect(); var spanRectLinkY = spanRectLink.height; floatSpanHeight = parseFloat(spanY + spanRectLinkY); }
 else {
 floatSpanHeight = parseFloat(spanY); }

 if (!isNaN(floatSpanHeight))
 spanHeights[row][k].push(floatSpanHeight); }
 }
 }
 }

 if (!stackedCol.classList.contains("psa_sched-link")) {
 var y; if (!Array.isArray(heights[row])) {
 heights[row] = []; }

 stackedCol.style.height = "";  var rect = stackedCol.getBoundingClientRect(); if (stackedCol.classList.contains("psa_sched-with-link")) {
 var rectLink = stackedCols[j + 1].getBoundingClientRect(); y = rect.height + rectLink.height; }
 else {
 y = rect.height; }

 var floatHeight = parseFloat(y); if (!isNaN(floatHeight))
 heights[row].push(floatHeight); row++; }
 }
 }
 }

 var singleColIndexesLen = singleColIndexes.length; var heightsLen = heights.length; if (singleColIndexesLen < tdsLen) { 
 for (var i = singleColIndexesLen - 1; i >= 0; i--) {
 if (heightsLen >= 1) {
 heights[0].splice(singleColIndexes[i], 1); }
 }
 }

 for (var j = 0; j < heightsLen; j++) {
 var maxHeight = Math.max.apply(null, heights[j]); if (Array.isArray(spanHeights[j])) {
 var patternsLen = spanHeights[j].length; if (patternsLen > 0) {
 maxSpanHeights[j] = []; var maxSpanHeightsSum = 0; for (var k = 0; k < patternsLen; k++) {
 var maxSpanHeightPerPattern = Math.max.apply(null, spanHeights[j][k]); maxSpanHeights[j].push(maxSpanHeightPerPattern); maxSpanHeightsSum += maxSpanHeightPerPattern; }

 maxHeights.push(Math.max(maxSpanHeightsSum, maxHeight)); }
 else {
 maxHeights.push(maxHeight); }
 }
 else {
 maxHeights.push(maxHeight); }
 }

 for (var i = 0; i < tdsLen; i++) {
  var divGroupBox = tds[i].firstElementChild;  var stackedCols = divGroupBox.children; var stackedColsLen = stackedCols.length; var stackedColsNoSchedLinksLen = stackedColsLen - divGroupBox.querySelectorAll(".psa_sched-with-link").length;   if (stackedColsNoSchedLinksLen > 1 || singleColIndexesLen == tdsLen || (stackedColsNoSchedLinksLen == 1 && stackedCols[0].childElementCount > 1)) {
 var row = 0; for (var j = 0; j < stackedColsLen; j++) {
 
 if (stackedCols[j].id.search(/SSR_CLSRCH_F_WK_SSR_MTG_SCHED_L/i) > -1 || stackedCols[j].id.search(/SSR_CLSRCH_F_WK_SSR_INSTR_LONG/i) > -1 || stackedCols[j].id.search(/SSR_CLSRCH_F_WK_SSR_MTG_LOC_LONG/i) > -1) {
 var spans = stackedCols[j].children; var spansLen = spans.length; for (var k = 0; k < spansLen; k++) {
 if (spans[k] == stackedCols[j].lastElementChild && stackedCols[j].classList.contains("psa_sched-with-link")) {
 
 }
 else {
 spans[k].style.height = maxSpanHeights[row][k] + "px"; }
 }
 }
 

 if (stackedCols[j].classList.contains("psa_sched-link")) {
 var rect = stackedCols[j - 1].getBoundingClientRect(); var y = rect.height; var floatHeight = parseFloat(y); var tempHeight = maxHeights[row] - floatHeight; if (tempHeight > 0) {
 stackedCols[j].style.height = tempHeight + "px"; }

 row++; }
 else {
 if (stackedCols[j].classList.contains("psa_sched-with-link")) {
 
 
 }
 else {
 stackedCols[j].style.height = maxHeights[row] + "px"; row++
 }
 }
 }
 }
 }
 }

 
 grids[0].classList.remove("psc_invisible");  if (storageAvailable("sessionStorage")) {
 sessionStorage.setItem("ssr_grid", grids[0].outerHTML); }
 }
}


function getFlexGridFromStorage(linkClicked, row) {
 var grids = document.querySelectorAll(".ps_box-grid-flex.psc_gridlist-standard"); if (grids.length == 1) {
 if (grids[0].classList.contains("psc_invisible")) { 
 
 if (storageAvailable("sessionStorage")) {
 grids[0].outerHTML = sessionStorage.getItem("ssr_grid");  var el; if (row == -1) {
 
 }
 else {
 el = grids[0].querySelector("a[id^='" + linkClicked + "'][id$='" + row + "']"); }

 if (el) {
 scrollTo = function(el) {
 window.setTimeout(function() {
 window.location.hash = el.id; }, document.querySelector(':root.ie') ? 1000 : 600); }
 scrollTo(el); }
 }
 else {
 
 alignLinesInFlexGrid(); }
 }
 }
}


function storageAvailable(type) {
 try {
 var storage = window[type],
 x = "__storage_test__"; storage.setItem(x, x); storage.removeItem(x); return true; }
 catch(e) {
 return e instanceof DOMException && (
 
 e.code === 22 ||
 
 e.code === 1014 ||
 
 
 e.name === "QuotaExceededError" ||
 
 e.name === "NS_ERROR_DOM_QUOTA_REACHED") &&
 
 storage.length !== 0; }
}